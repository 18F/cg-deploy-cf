# The following line helps maintain current documentation at http://docs.cloudfoundry.org.
# code_snippet cf-stub-aws start
---
director_uuid: DIRECTOR_ID 
meta:

  environment: DEPLOYMENT_NAME
  service_domain: mypaas.com

  app_domains:
  - APP_DOMAIN
  resource_key: (( meta.environment ))

  zones:
    z1: us-gov-west-1a 
    z2: us-gov-west-1b
  elbs:
  - cfrouter
  default_env:
    # Default vcap & root password on deployed VMs (ie c1oudc0w)
    bosh:
      password: xxx 
  aws:
      key_name: ~

networks:
- name: cf1
  subnets:
  - cloud_properties:
      subnet: SUBNET1_ID
    static:
    - 10.0.10.65 - 10.0.10.100
    range: 10.0.10.100/26
- name: cf2
  subnets:
  - cloud_properties:
      subnet: SUBNET2_ID
    static:
    - 10.0.11.65 - 10.0.11.100
    range: 10.0.11.100/26

properties:
  app_ssh:
    host_key_fingerprint: DIEGO-SSH-FINGERPRINT
    oauth_client_id: ssh-proxy
  ssl:
    skip_cert_verify: false
  cc:
    mutual_tls:
      ca_cert: |-
        -----BEGIN CERTIFICATE-----
        -----END CERTIFICATE-----
      public_cert: |-
        -----BEGIN CERTIFICATE-----
        -----END CERTIFICATE-----
      private_key: |-
        -----BEGIN RSA PRIVATE KEY-----
        -----END RSA PRIVATE KEY-----
    min_cli_version: 6.22.2
    default_to_diego_backend: true
    users_can_select_backend: false
    diego:
      staging: optional
      running: disabled
    droplets:
      droplet_directory_key: DROPLET_DIR_KEY 
    buildpacks:
      buildpack_directory_key: BUILDPACK_DIR_KEY
    staging_upload_user: STAGING_UPLOADER 
    staging_upload_password: STAGING_UPLOAD_PASSWORD
    bulk_api_password: BULK_API_PASSWORD
    # cannot be rotated
    db_encryption_key: DB_ENCRYPTION_KEY
    newrelic:
      license_key: NEWRELIC_LICENSE_KEY 

  ccdb:
    db_scheme: postgres
    roles:
    - tag: 
      name: CCDB_DB_USER
      password: CCDB_DB_PASSWORD
    databases:
    - tag:
      name: CCDB_DB_NAME
    address: CCDB_DB_HOST
    port:
  collectd:
    riemann_server: RIEMANN_SERVER_IP 
  consul:
    encrypt_keys:
    - RANDOM-SECRET-KEY
    ca_cert: |
      -----BEGIN CERTIFICATE-----
      -----END CERTIFICATE-----
    agent_cert: |
      -----BEGIN CERTIFICATE-----
      -----END CERTIFICATE-----
    agent_key: |
      -----BEGIN RSA PRIVATE KEY-----
      -----END RSA PRIVATE KEY-----
    server_cert: |
      -----BEGIN CERTIFICATE-----
      -----END CERTIFICATE-----
    server_key: |
      -----BEGIN RSA PRIVATE KEY-----
      -----END RSA PRIVATE KEY-----
  dea_next:
    disk_mb: 15000
    memory_mb: 15000
  domain: DOMAIN
  hm9000:
    ca_cert: |
      -----BEGIN CERTIFICATE-----
      -----END CERTIFICATE-----
    server_cert: |
      -----BEGIN CERTIFICATE-----
      -----END CERTIFICATE-----
    server_key: |
      -----BEGIN RSA PRIVATE KEY-----
      -----END RSA PRIVATE KEY-----
    client_cert: |
      -----BEGIN CERTIFICATE-----
      -----END CERTIFICATE-----
    client_key: |
      -----BEGIN RSA PRIVATE KEY-----
      -----END RSA PRIVATE KEY-----
  nats:
    user: NATS_USER
    password: NATS_PASSWORD
  router:
    route_services_secret: ROUTE_SERVICES_SECRET
    status:
      user: ROUTER_USER
      password: ROUTER_PASSWORD
  template_only:
    aws:
      availability_zone: us-gov-west-1a
      availability_zone2: us-gov-west-1b
      region: us-gov-west-1
  uaa:
    ca_cert: |-
      -----BEGIN CERTIFICATE-----
      -----END CERTIFICATE-----
    sslCertificate: |-
      -----BEGIN CERTIFICATE-----
      -----END CERTIFICATE-----
    sslPrivateKey: |-
      -----BEGIN RSA PRIVATE KEY-----
      -----END RSA PRIVATE KEY-----
    admin:
      client_secret: 
    batch:
      username: BATCH_USERNAME
      password: BATCH_PASSWORD
    cc:
      client_secret: 
    clients:
      # rotated
      admin-ui:
        secret: 
      kibana_oauth2_client:
        secret: 
      logsearch_firehose_ingestor:
        secret: 
      kubernetes-client:
        secret: 
      cloud-gov-community:
        secret: 
      sandbox-bot:
        secret: 
      uaa-token-audit:
        secret: 
      influxdb-firehose-nozzle:
        secret: 
      login:
        secret: 
      notifications:
        secret: 
      doppler:
        secret: DOPPLER_SECRET 
      cloud_controller_username_lookup:
        secret: 
      cc_routing:
        secret: 
      gorouter:
        secret: 
      ssh-proxy:
        secret: 
      tcp_emitter:
        secret: tcp_emitter_client_secret
      tcp_router:
        secret: 
      uaa_extras_app:
        secret: 
      dashboard:
        secret: 
      concourse-broker:
        secret: 
      uaaproxy:
        secret: 
      firehose_exporter:
        secret: 
    jwt:
      signing_key: |
        -----BEGIN RSA PRIVATE KEY-----
        -----END RSA PRIVATE KEY-----
      verification_key: |
        -----BEGIN PUBLIC KEY-----
        -----END PUBLIC KEY-----
    scim:
      groups:
        admin_ui.user: "Admin UI users"
        admin_ui.admin: "Admin UI admins"
      users:
      - name: sys-tester
        password: sys-tester-password
        groups:
        - scim.write
        - openid
        - scim.read
        - cloud_controller.admin
        - doppler.firehose
      - name: user-tester
        password: user_tester_password
        groups:
        - openid
    newrelic:
      production:
        app_name: UAA (cf-production)
        error_collector:
          ignore_errors: akka.actor.ActorKilledException
        license_key: new_relic_license_key

  loggregator:
    uaa:
      client_secret: DOPPLER_SECRET 
    tls:
      ca_cert: |-
        -----BEGIN CERTIFICATE-----
        -----END CERTIFICATE-----
      doppler:
        cert: |-
          -----BEGIN CERTIFICATE-----
          -----END CERTIFICATE-----
        key: |-
          -----BEGIN RSA PRIVATE KEY-----
          -----END RSA PRIVATE KEY-----
      metron:
        cert: |-
          -----BEGIN CERTIFICATE-----
          -----END CERTIFICATE-----
        key: |-
          -----BEGIN RSA PRIVATE KEY-----
          -----END RSA PRIVATE KEY-----
      trafficcontroller:
        cert: |-
          -----BEGIN CERTIFICATE-----
          -----END CERTIFICATE-----
        key: |-
          -----BEGIN RSA PRIVATE KEY-----
          -----END RSA PRIVATE KEY-----
      statsd_injector:
        cert: |-
          -----BEGIN CERTIFICATE-----
          -----END CERTIFICATE-----
        key: |-
          -----BEGIN RSA PRIVATE KEY-----
          -----END RSA PRIVATE KEY-----
      syslogdrainbinder:
        cert: |-
          -----BEGIN CERTIFICATE-----
          -----END CERTIFICATE-----
        key: |-
          -----BEGIN RSA PRIVATE KEY-----
          -----END RSA PRIVATE KEY-----
  loggregator_endpoint:
    shared_secret: loggregator_shared_secret
  uaadb:
    db_scheme: postgresql
    roles:
    - tag: 
      name: 
      password: 
    databases:
    - tag: 
      name
    address: 
    port: 
  login:
    smtp:
      host: 
      password: 
      from_address: 
      port: 
      user:
    saml:
      signatureAlgorithm: SHA256
      serviceProviderKey: |+
        -----BEGIN RSA PRIVATE KEY-----
        -----END RSA PRIVATE KEY-----
      serviceProviderKeyPassword: 
      serviceProviderCertificate: |+
        -----BEGIN CERTIFICATE-----
        -----END CERTIFICATE-----
      providers:

    uaa_certificate: |
      -----BEGIN CERTIFICATE-----
      -----END CERTIFICATE-----
  newrelic:
    license_key: new_relic_license_key
    deployment_tag: (( meta.environment ))
  nessus-agent:
    key: 
    server: 
    port: 
    group: 
  collector:
    newrelic_insights:
      api_key: 
      app_id: 
    newrelic_plugin:
      license_key: new_relic_license_key

  acceptance_tests:
    admin_password: sys-tester-password
    admin_user: sys-tester
    api:  (( "api." domain ))
    apps_domain: APP_DOMAIN
    backend: diego
    existing_user: user-tester
    existing_user_password: user_tester_password
    include_diego_ssh: true
    include_route_services: true
    include_routing_api: true
    # include_sso: true
    nodes: 2
    oauth_password: tcp_emitter_client_secret
    skip_ssl_validation: true
    system_domain: (( domain ))
    include_sso: false
    skip_regex: 'dotnet\-core|transparently\sproxies\sboth\sreserved\scharacters\sand\sunsafe\scharacters'

  smoke_tests:
    api:  (( "api." domain ))
    apps_domain: APP_DOMAIN
    backend: diego
    ginkgo_opts: ~
    org: test
    password: sys-tester-password
    skip_ssl_validation: true
    space: test
    user: sys-tester

jobs:
- name: runner_z1
  instances: 0
- name: runner_z2
  instances: 0
- name: hm9000_z1
  instances: 0
- name: hm9000_z2
  instances: 0
