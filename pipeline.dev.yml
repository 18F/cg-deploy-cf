---
groups:
- name: all
  jobs:
  - deploy-cf-development
  - smoke-tests-development
  - acceptance-tests-development
  - uaa-smoke-tests-development

jobs:
- name: deploy-cf-development
  serial_groups: [development]
  serial: true
  plan:
  - aggregate:
    - get: master-bosh-root-cert
    - get: pipeline-tasks
    - get: cf-manifests-development
    - get: common
      resource: common-development
    - get: cf-stemcell
    - get: cf-release
    - get: uaa-customized-release
    - get: java-buildpack-release
    - get: java-offline-buildpack-release
    - get: go-buildpack-release
    - get: binary-buildpack-release
    - get: nodejs-buildpack-release
    - get: ruby-buildpack-release
    - get: php-buildpack-release
    - get: python-buildpack-release
    - get: staticfile-buildpack-release
    - get: dotnet-core-buildpack-release
    - get: cg-s3-secureproxy-release
  - task: cf-development-manifest
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: 18fgsa/concourse-task
      inputs:
      - name: cf-manifest-development
      - name: common
      run:
        path: cf-manifests-development/generate-development.sh
        args:
         - "common/secrets.yml"
         - "cf-manifest/manifest.yml"
      output:
      - name: cf-manifest
  - put: cf-deployment-development
    params: &deploy-params
      cert: master-bosh-root-cert/master-bosh.crt
      manifest: cf-manifest/manifest.yml
      releases:
      - binary-buildpack-release/*.tgz
      - cf-release/*.tgz
      - cg-s3-secureproxy-release/*.tgz
      - dotnet-core-buildpack-release/*.tgz
      - go-buildpack-release/*.tgz
      - java-buildpack-release/*.tgz
      - java-offline-buildpack-release/*.tgz
      - nodejs-buildpack-release/*.tgz
      - php-buildpack-release/*.tgz
      - python-buildpack-release/*.tgz
      - ruby-buildpack-release/*.tgz
      - staticfile-buildpack-release/*.tgz
      - uaa-customized-release/*.tgz
      stemcells:
      - cf-stemcell/*.tgz
- name: smoke-tests-development
  serial_groups: [development]
  plan:
  - aggregate:
    - get: binary-buildpack-release
      passed: [deploy-cf-development]
    - get: cf-deployment-development
      passed: [deploy-cf-development]
    - get: cf-release
      passed: [deploy-cf-development]
    - get: cf-stemcell
      passed: [deploy-cf-development]
    - get: cg-s3-secureproxy-release
      passed: [deploy-cf-development]
    - get: common
      resource: master-bosh-root-cert
      passed: [deploy-cf-development]
    - get: dotnet-core-buildpack-release
      passed: [deploy-cf-development]
    - get: go-buildpack-release
      passed: [deploy-cf-development]
    - get: java-buildpack-release
      passed: [deploy-cf-development]
    - get: java-offline-buildpack-release
      passed: [deploy-cf-development]
    - get: nodejs-buildpack-release
      passed: [deploy-cf-development]
    - get: php-buildpack-release
      passed: [deploy-cf-development]
    - get: pipeline-tasks
    - get: python-buildpack-release
      passed: [deploy-cf-development]
    - get: ruby-buildpack-release
      passed: [deploy-cf-development]
    - get: staticfile-buildpack-release
      passed: [deploy-cf-development]
    - get: uaa-customized-release
      passed: [deploy-cf-development, uaa-smoke-tests-development]
  - task: run-errand
    file: pipeline-tasks/bosh-errand.yml
    params:
      BOSH_TARGET: {{development-bosh-target}}
      BOSH_USERNAME: {{development-bosh-username}}
      BOSH_PASSWORD: {{development-bosh-password}}
      BOSH_DEPLOYMENT_NAME: {{development-bosh-deployment}}
      BOSH_ERRAND: smoke_tests
      BOSH_CACERT: common/master-bosh.crt
      BOSH_FLAGS: "--keep-alive"
- name: acceptance-tests-development
  serial_groups: [development]
  plan:
  - aggregate:
    - get: binary-buildpack-release
      passed: [deploy-cf-development]
    - get: cf-deployment-development
      passed: [smoke-tests-development]
    - get: cf-release
      passed: [smoke-tests-development]
    - get: cf-stemcell
      passed: [smoke-tests-development]
    - get: cg-s3-secureproxy-release
      passed: [smoke-tests-development]
    - get: common
      resource: master-bosh-root-cert
      passed: [smoke-tests-development]
    - get: dotnet-core-buildpack-release
      passed: [deploy-cf-development]
    - get: go-buildpack-release
      passed: [deploy-cf-development]
    - get: java-buildpack-release
      passed: [deploy-cf-development]
    - get: java-offline-buildpack-release
      passed: [deploy-cf-development]
    - get: nodejs-buildpack-release
      passed: [deploy-cf-development]
    - get: php-buildpack-release
      passed: [deploy-cf-development]
    - get: pipeline-tasks
    - get: python-buildpack-release
      passed: [deploy-cf-development]
    - get: ruby-buildpack-release
      passed: [deploy-cf-development]
    - get: staticfile-buildpack-release
      passed: [deploy-cf-development]
    - get: uaa-customized-release
      passed: [smoke-tests-development, uaa-smoke-tests-development]
  - task: run-errand
    file: pipeline-tasks/bosh-errand.yml
    params:
      BOSH_TARGET: {{development-bosh-target}}
      BOSH_USERNAME: {{development-bosh-username}}
      BOSH_PASSWORD: {{development-bosh-password}}
      BOSH_DEPLOYMENT_NAME: {{development-bosh-deployment}}
      BOSH_ERRAND: acceptance_tests
      BOSH_CACERT: common/master-bosh.crt
- name: uaa-smoke-tests-development
  plan:
  - aggregate:
    - get: cf-deployment-development
    - get: pipeline-tasks
    - get: uaa-customized-release
      passed: [deploy-cf-development]
  - task: smoke-tests
    file: pipeline-tasks/uaa-smoke-tests.yml
    params:
      BASE_URL: {{uaa-url-development}}

resource_types:
- name: 18f-bosh-deployment
  type: docker-image
  source:
    repository: 18fgsa/bosh-deployment-resource

- name: cg-common
  type: docker-image
  source:
    repository: 18fgsa/cg-common-resource

resources:
- name: binary-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/binary-buildpack-release

- name: cf-deployment-development
  type: 18f-bosh-deployment
  source:
    target: {{development-bosh-target}}
    username: {{development-bosh-username}}
    password: {{development-bosh-password}}
    deployment: {{development-bosh-deployment}}
    ignore_ssl: true

- name: cf-manifests-development
  type: git
  source:
    uri: {{cf-manifests-git-url}}
    branch: {{cf-manifests-git-branch}}
    paths:
    - cf-*.yml
    - diego-stub.yml

- name: cf-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/cf-release

- name: cf-stemcell
  type: s3
  source:
    access_key_id: {{ci-access-key-id}}
    bucket: {{stemcell-bucket}}
    regexp: light-bosh-stemcell-(.*)-aws-xen-hvm-ubuntu-trusty-go_agent.tgz
    region_name: {{aws-region}}
    secret_access_key: {{ci-secret-access-key}}

- name: cg-s3-secureproxy-release
  type: s3
  source:
    access_key_id: {{ci-access-key-id}}
    bucket: {{s3-bosh-releases-bucket}}
    private: true
    regexp: secureproxy-(.*).tgz
    secret_access_key: {{ci-secret-access-key}}
    region_name: {{aws-region}}

- name: common-development
  type: cg-common
  source:
    bucket_name: {{cf-private-development-bucket}}
    access_key_id: {{ci-access-key-id}}
    secret_access_key: {{ci-secret-access-key}}
    secrets_file: cf-development.yml
    secrets_passphrase: {{cf-private-development-passphrase}}
    bosh_cert: bosh.pem
    region: {{aws-region}}

- name: diego-manifests
  type: git
  source:
    uri: {{diego-manifests-git-url}}
    branch: {{diego-manifests-git-branch}}

- name: diego-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/diego-release

- name: diego-release-repo
  type: git
  source:
    uri: {{diego-release-repo-git-url}}
    branch: {{diego-release-repo-git-branch}}
    paths:
    - releases/diego-*.yml

- name: diego-development-deployment
  type: 18f-bosh-deployment
  source:
    target: {{development-bosh-target}}
    username: {{development-bosh-username}}
    password: {{development-bosh-password}}
    deployment: {{development-bosh-deployment}}
    ignore_ssl: true

- name: diego-stemcell
  type: s3
  source:
    access_key_id: {{ci-access-key-id}}
    bucket: {{stemcell-bucket}}
    regexp: light-bosh-stemcell-(.*)-aws-xen-hvm-ubuntu-trusty-go_agent.tgz
    region_name: {{aws-region}}
    secret_access_key: {{ci-secret-access-key}}

- name: garden-runc-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/garden-runc-release

- name: dotnet-core-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/dotnet-core-buildpack-release

- name: go-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/go-buildpack-release

- name: java-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/java-buildpack-release

- name: java-offline-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/java-offline-buildpack-release

- name: master-bosh-root-cert
  type: s3
  source:
    access_key_id: {{ci-access-key-id}}
    bucket: {{cf-private-prod-bucket}}
    region_name: {{aws-region}}
    secret_access_key: {{ci-secret-access-key}}
    versioned_file: master-bosh.crt

- name: nodejs-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/nodejs-buildpack-release

- name: php-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/php-buildpack-release

- name: pipeline-tasks
  type: git
  source:
    uri: {{pipeline-tasks-git-url}}
    branch: {{pipeline-tasks-git-branch}}

- name: python-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/python-buildpack-release

- name: ruby-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/ruby-buildpack-release

- name: staticfile-buildpack-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/staticfile-buildpack-release

- name: uaa-customized-release
  type: s3
  source:
    access_key_id: {{ci-access-key-id}}
    bucket: {{s3-bosh-releases-bucket}}
    private: true
    regexp: uaa-customized-(.*).tgz
    secret_access_key: {{ci-secret-access-key}}
    region_name: {{aws-region}}
