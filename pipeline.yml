---
jobs:

- name: deploy-cf-staging
  serial: true
  plan:
  - aggregate:
    - get: pipeline-tasks
      trigger: false
    - get: cf-manifests-staging
      trigger: true
    - get: common-staging
      trigger: true
    - get: cf-stemcell
      trigger: false
    - get: cg-s3-nessus-agent-release
      trigger: true
    - get: cg-s3-fisma-release
      trigger: true
    - get: cg-s3-newrelic-release
      trigger: true
    - get: cg-s3-collectd-release
      trigger: true
    - get: cg-s3-18f-cf-release
      trigger: true
    - get: cg-s3-secureproxy-release
      trigger: true
    - get: cg-s3-tripwire-release
      trigger: true
    - get: cg-s3-awslogs-release
      trigger: true
    - get: cf-release
      trigger: true
  - task: cf-stage-manifest
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: 18fgsa/concourse-task
      inputs:
      - name: cf-manifests-staging
      - name: common-staging
      run:
        path: cf-manifests-staging/generate-staging.sh
        args: ["common-staging/secrets.yml", "cf-stage-manifest/staging-manifest.yml"]
      outputs:
      - name: cf-stage-manifest
  - put: cf-deployment-staging
    params:
      cert: common-staging/boshCA.crt
      manifest: cf-stage-manifest/staging-manifest.yml
      releases:
        - cf-release/*.tgz
        - cg-s3-nessus-agent-release/*.tgz
        - cg-s3-fisma-release/*.tgz
        - cg-s3-newrelic-release/*.tgz
        - cg-s3-collectd-release/*.tgz
        - cg-s3-18f-cf-release/*.tgz
        - cg-s3-secureproxy-release/*.tgz
        - cg-s3-tripwire-release/*.tgz
        - cg-s3-awslogs-release/*.tgz
      stemcells:
        - cf-stemcell/*.tgz
    on_success:
      put: slack
      params:
        text: |
          :white_check_mark: Successfully deployed CF on staging
          <https://ci.cloud.gov/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
        channel: {{slack-channel}}
        username: {{slack-username}}
        icon_url: {{slack-icon-url}}
    on_failure:
      put: slack
      params:
        text: |
          :x: FAILED to deploy CF on staging
          <https://ci.cloud.gov/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
        channel: {{slack-channel}}
        username: {{slack-username}}
        icon_url: {{slack-icon-url}}

- name: smoke-tests-staging
  plan:
  - get: cf-deployment-staging
    trigger: true
    passed: [deploy-cf-staging]
  - task: run-errand
    file: pipeline-tasks/bosh-errand.yml
    params:
      BOSH_TARGET: {{cf-deployment-staging-bosh-target}}
      BOSH_USERNAME: {{cf-deployment-staging-bosh-username}}
      BOSH_PASSWORD: {{cf-deployment-staging-bosh-password}}
      BOSH_DEPLOYMENT_NAME: {{cf-deployment-staging-bosh-deployment}}
      BOSH_ERRAND: smoke_tests
      BOSH_CACERT: common/boshCA.crt
    on_success:
      put: slack
      params:
        text: |
          :white_check_mark: Smoke Tests for CF on staging PASSED
          <https://ci.cloud.gov/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
        channel: {{slack-channel}}
        username: {{slack-username}}
        icon_url: {{slack-icon-url}}
    on_failure:
      put: slack
      params:
        text: |
          :x: Smoke Tests for CF on staging FAILED
          <https://ci.cloud.gov/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
        channel: {{slack-channel}}
        username: {{slack-username}}
        icon_url: {{slack-icon-url}}

- name: acceptance-tests-staging
  plan:
  - get: cf-deployment-staging
    trigger: true
    passed: [smoke-tests-staging]
  - task: run-errand
    file: pipeline-tasks/bosh-errand.yml
    params:
      BOSH_TARGET: {{cf-deployment-staging-bosh-target}}
      BOSH_USERNAME: {{cf-deployment-staging-bosh-username}}
      BOSH_PASSWORD: {{cf-deployment-staging-bosh-password}}
      BOSH_DEPLOYMENT_NAME: {{cf-deployment-staging-bosh-deployment}}
      BOSH_ERRAND: acceptance_tests
      BOSH_CACERT: common/boshCA.crt
    on_success:
      put: slack
      params:
        text: |
          :white_check_mark: Acceptance Tests for CF on staging PASSED
          <https://ci.cloud.gov/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
        channel: {{slack-channel}}
        username: {{slack-username}}
        icon_url: {{slack-icon-url}}
    on_failure:
      put: slack
      params:
        text: |
          :x: Acceptance Tests for CF on staging FAILED
          <https://ci.cloud.gov/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
        channel: {{slack-channel}}
        username: {{slack-username}}
        icon_url: {{slack-icon-url}}

- name: deploy-cf-prod
  serial: true
  plan:
  - aggregate:
    - get: pipeline-tasks
      trigger: false
    - get: cf-manifests-prod
      trigger: false
    - get: common-prod
      trigger: false
    - get: cf-stemcell
      trigger: false
      passed: [acceptance-tests-staging]
    - get: cg-s3-nessus-agent-release
      trigger: false
    - get: cg-s3-fisma-release
      trigger: false
    - get: cg-s3-newrelic-release
      trigger: false
    - get: cg-s3-collectd-release
      trigger: false
    - get: cg-s3-18f-cf-release
      trigger: false
    - get: cg-s3-secureproxy-release
      trigger: false
    - get: cg-s3-tripwire-release
      trigger: false
    - get: cg-s3-awslogs-release
      trigger: false
    - get: cf-release
      trigger: false
      passed: [acceptance-tests-staging]
  - task: cf-prod-manifest
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: 18fgsa/concourse-task
      inputs:
      - name: cf-manifests-prod
      - name: common-prod
      run:
        path: cf-manifests-prod/generate.sh
        args: ["common-prod/secrets.yml", "cf-prod-manifest/manifest.yml"]
      outputs:
      - name: cf-prod-manifest
  - put: cf-deployment-prod
    params:
      cert: common-prod/boshCA.crt
      manifest: cf-prod-manifest/manifest.yml
      releases:
        - cf-release/*.tgz
        - cg-s3-nessus-agent-release/*.tgz
        - cg-s3-fisma-release/*.tgz
        - cg-s3-newrelic-release/*.tgz
        - cg-s3-collectd-release/*.tgz
        - cg-s3-18f-cf-release/*.tgz
        - cg-s3-secureproxy-release/*.tgz
        - cg-s3-tripwire-release/*.tgz
        - cg-s3-awslogs-release/*.tgz
      stemcells:
        - cf-stemcell/*.tgz
    on_success:
      put: slack
      params:
        text: |
          :white_check_mark: Successfully deployed CF on prod
          <https://ci.cloud.gov/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
        channel: {{slack-channel}}
        username: {{slack-username}}
        icon_url: {{slack-icon-url}}
    on_failure:
      put: slack
      params:
        text: |
          :x: FAILED to deploy CF on prod
          <https://ci.cloud.gov/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
        channel: {{slack-channel}}
        username: {{slack-username}}
        icon_url: {{slack-icon-url}}

- name: smoke-tests-prod
  plan:
  - aggregate:
    - get: pipeline-tasks
      trigger: false
    - get: cf-manifests-prod
      trigger: false
      passed: [deploy-cf-prod]
    - get: common
      resource: common-prod
      trigger: false
      passed: [deploy-cf-prod]
    - get: cf-stemcell
      trigger: false
      passed: [deploy-cf-prod]
    - get: cf-release
      trigger: false
      passed: [deploy-cf-prod]
  - task: run-errand
    file: pipeline-tasks/bosh-errand.yml
    params:
      BOSH_TARGET: {{cf-deployment-prod-bosh-target}}
      BOSH_USERNAME: {{cf-deployment-prod-bosh-username}}
      BOSH_PASSWORD: {{cf-deployment-prod-bosh-password}}
      BOSH_DEPLOYMENT_NAME: {{cf-deployment-prod-bosh-deployment}}
      BOSH_ERRAND: smoke_tests
      BOSH_CACERT: common/boshCA.crt
    on_success:
      put: slack
      params:
        text: |
          :white_check_mark: Smoke Tests for CF on prod PASSED
          <https://ci.cloud.gov/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
        channel: {{slack-channel}}
        username: {{slack-username}}
        icon_url: {{slack-icon-url}}
    on_failure:
      put: slack
      params:
        text: |
          :x: Smoke Tests for CF on prod FAILED
          <https://ci.cloud.gov/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
        channel: {{slack-channel}}
        username: {{slack-username}}
        icon_url: {{slack-icon-url}}

- name: acceptance-tests-prod
  plan:
  - aggregate:
    - get: pipeline-tasks
      trigger: false
    - get: cf-manifests-prod
      trigger: false
      passed: [smoke-tests-prod]
    - get: common
      resource: common-prod
      trigger: false
      passed: [smoke-tests-prod]
    - get: cf-stemcell
      trigger: false
      passed: [smoke-tests-prod]
    - get: cf-release
      trigger: false
      passed: [smoke-tests-prod]
  - task: run-errand
    file: pipeline-tasks/bosh-errand.yml
    params:
      BOSH_TARGET: {{cf-deployment-prod-bosh-target}}
      BOSH_USERNAME: {{cf-deployment-prod-bosh-username}}
      BOSH_PASSWORD: {{cf-deployment-prod-bosh-password}}
      BOSH_DEPLOYMENT_NAME: {{cf-deployment-prod-bosh-deployment}}
      BOSH_ERRAND: acceptance_tests
      BOSH_CACERT: common/boshCA.crt
    on_success:
      put: slack
      params:
        text: |
          :white_check_mark: Acceptance Tests for CF on prod PASSED
          <https://ci.cloud.gov/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
        channel: {{slack-channel}}
        username: {{slack-username}}
        icon_url: {{slack-icon-url}}
    on_failure:
      put: slack
      params:
        text: |
          :x: Acceptance Tests for CF on prod FAILED
          <https://ci.cloud.gov/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
        channel: {{slack-channel}}
        username: {{slack-username}}
        icon_url: {{slack-icon-url}}

resources:
- name: pipeline-tasks
  type: git
  source:
    uri: {{pipeline-tasks-git-url}}
    branch: {{pipeline-tasks-git-branch}}

- name: slack
  type: slack-notification
  source:
    url: {{slack-webhook-url}}

- name: cf-manifests-staging
  type: git
  source:
    uri: {{cf-manifests-git-url}}
    branch: {{cf-manifests-git-branch-staging}}
    paths:
    - cf-*.yml
    - diego-stub.yml

- name: cf-manifests-prod
  type: git
  source:
    uri: {{cf-manifests-git-url}}
    branch: {{cf-manifests-git-branch-prod}}
    paths:
    - cf-*.yml
    - diego-stub.yml

- name: common-staging
  type: cg-common
  source:
    bucket_name: {{cf-private-staging-bucket}}
    access_key_id: {{ci-access-key-id}}
    secret_access_key: {{ci-secret-access-key}}
    secrets_file: cf-staging.yml
    secrets_passphrase: {{cf-private-staging-passphrase}}
    bosh_cert: bosh.pem
    region: {{aws-region}}

- name: common-prod
  type: cg-common
  source:
    bucket_name: {{cf-private-prod-bucket}}
    access_key_id: {{ci-access-key-id}}
    secret_access_key: {{ci-secret-access-key}}
    secrets_file: cf.yml
    secrets_passphrase: {{cf-private-prod-passphrase}}
    bosh_cert: bosh.pem
    region: {{aws-region}}

- name: cf-stemcell
  type: s3
  source:
    access_key_id: {{ci-access-key-id}}
    bucket: {{stemcell-bucket}}
    regexp: light-bosh-stemcell-(.*)-aws-xen-hvm-ubuntu-trusty-go_agent.tgz
    region_name: {{aws-region}}
    secret_access_key: {{ci-secret-access-key}}

- name: cf-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/cf-release

- name: cf-deployment-staging
  type: 18f-bosh-deployment
  source:
    target: {{cf-deployment-staging-bosh-target}}
    username: {{cf-deployment-staging-bosh-username}}
    password: {{cf-deployment-staging-bosh-password}}
    deployment: {{cf-deployment-staging-bosh-deployment}}
    ignore_ssl: true

- name: cg-s3-nessus-agent-release
  type: s3
  source:
    access_key_id: {{ci-access-key-id}}
    bucket: {{s3-bosh-releases-bucket}}
    private: true
    regexp: nessus-agent-(.*).tgz
    secret_access_key: {{ci-secret-access-key}}
    region_name: {{aws-region}}

- name: cg-s3-fisma-release
  type: s3
  source:
    access_key_id: {{ci-access-key-id}}
    bucket: {{s3-bosh-releases-bucket}}
    private: true
    regexp: fisma-(.*).tgz
    secret_access_key: {{ci-secret-access-key}}
    region_name: {{aws-region}}

- name: cg-s3-newrelic-release
  type: s3
  source:
    access_key_id: {{ci-access-key-id}}
    bucket: {{s3-bosh-releases-bucket}}
    private: true
    regexp: newrelic-(.*).tgz
    secret_access_key: {{ci-secret-access-key}}
    region_name: {{aws-region}}

- name: cg-s3-collectd-release
  type: s3
  source:
    access_key_id: {{ci-access-key-id}}
    bucket: {{s3-bosh-releases-bucket}}
    private: true
    regexp: collectd-(.*).tgz
    secret_access_key: {{ci-secret-access-key}}
    region_name: {{aws-region}}

- name: cg-s3-18f-cf-release
  type: s3
  source:
    access_key_id: {{ci-access-key-id}}
    bucket: {{s3-bosh-releases-bucket}}
    private: true
    regexp: 18f-cf-(.*).tgz
    secret_access_key: {{ci-secret-access-key}}
    region_name: {{aws-region}}

- name: cg-s3-secureproxy-release
  type: s3
  source:
    access_key_id: {{ci-access-key-id}}
    bucket: {{s3-bosh-releases-bucket}}
    private: true
    regexp: secureproxy-(.*).tgz
    secret_access_key: {{ci-secret-access-key}}
    region_name: {{aws-region}}

- name: cg-s3-tripwire-release
  type: s3
  source:
    access_key_id: {{ci-access-key-id}}
    bucket: {{s3-bosh-releases-bucket}}
    private: true
    regexp: tripwire-(.*).tgz
    secret_access_key: {{ci-secret-access-key}}
    region_name: {{aws-region}}

- name: cg-s3-awslogs-release
  type: s3
  source:
    access_key_id: {{ci-access-key-id}}
    bucket: {{s3-bosh-releases-bucket}}
    private: true
    regexp: awslogs-(.*).tgz
    secret_access_key: {{ci-secret-access-key}}
    region_name: {{aws-region}}

- name: cf-deployment-prod
  type: 18f-bosh-deployment
  source:
    target: {{cf-deployment-prod-bosh-target}}
    username: {{cf-deployment-prod-bosh-username}}
    password: {{cf-deployment-prod-bosh-password}}
    deployment: {{cf-deployment-prod-bosh-deployment}}
    ignore_ssl: true

resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
- name: 18f-bosh-deployment
  type: docker-image
  source:
    repository: 18fgsa/bosh-deployment-resource
- name: cg-common
  type: docker-image
  source:
    repository: 18fgsa/cg-common-resource

groups:
- name: all
  jobs:
  - deploy-cf-staging
  - smoke-tests-staging
  - acceptance-tests-staging
  - deploy-cf-prod
  - smoke-tests-prod
  - acceptance-tests-prod
- name: staging
  jobs:
  - deploy-cf-staging
  - smoke-tests-staging
  - acceptance-tests-staging
- name: production
  jobs:
  - deploy-cf-prod
  - smoke-tests-prod
  - acceptance-tests-prod
